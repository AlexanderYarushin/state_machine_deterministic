#include <QCoreApplication>
#include <QMap>

#include "lib.cpp"

static std::vector<QString> arrayInput  = {
    {"Карта"},
    {"Подтверждение #1"},
    {"Некорректный пароль #1"},
    {"Корректный пароль #1"},
    {"Таймер #1"},
    {"Подтверждение #2"},
    {"Некорректный пароль #2"},
    {"Корректный пароль #2"},
    {"Таймер #2"},
    {"Подтверждение #3"},
    {"Некорректный пароль #3"},
    {"Корректный пароль #3"},
    {"Таймер #3"},
    {"Запрос баланса"},
    {"Внести сумму"},
    {"Выдать сумму"},
    {"Продолжить #1"},
    {"Продолжить #2"},
    {"Продолжить #3"},
    {"Подтверждение #4"},
    {"Подтверждение #5"},
    {"Таймер #4"},
    {"Выход #1"},
    {"Выход #2"},
    {"Выход #3"}
};


static std::vector<QString> arrayCondition = {
    {"Начало"},
    {"Ввод пароля #1"},
    {"Авторизация #1"},
    {"Сообщение об ошибке #1"},
    {"Ввод пароля #2"},
    {"Авторизация #2"},
    {"Сообщение об ошибке #2"},
    {"Ввод пароля #3"},
    {"Авторизация #3"},
    {"Сообщение о блокироваке"},
    {"Меню"},
    {"Вывод сообщения о балансе"},
    {"Окно с количеством принятой суммы"},
    {"Окно с полем ввода для суммы"},
    {"Выдача денег"},
    {"Сообщение о принятии суммы"},
    {"Сообщение о выдаче суммы"}
};
static std::vector<std::vector<int>> jumpTable = {
    {2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //1
    {0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //2
    {0,0,4,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //3
    {0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //4
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //5
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //6
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //7
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //8
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //9
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //10
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //11
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //12
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //13
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //14
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //15
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //16
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //17
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //18
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //19
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //20
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //21
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //21
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //22
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //23
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, //24
    {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}  //25
};

void jump(unsigned ind){
    QTextStream cin(stdin);
    log("Текущее состояние: "+arrayCondition[ind]+"\n");
    log("Действия:\n");
    int select = 1;
    std::vector<int> selectArray;
    for(unsigned i = 0; i < jumpTable[ind].size(); ++i){
        if(jumpTable[ind][i] != 0) {
            log(QString::number(select) + ". " + arrayInput[i]+"\n");
            select++;
            selectArray.push_back(jumpTable[ind][i]);
        }
    }
    log("Выберите действие: ");
    cin >> select;
    unsigned newCondition = selectArray[select-1]-1;

    log("\nПереход: "+arrayCondition[0]+" -> "+arrayCondition[newCondition]+"\n\n");
    jump(newCondition);
}


int main(int argc, char *argv[])
{
    QCoreApplication a(argc, argv);
    jump(0);
    return a.exec();
}




















